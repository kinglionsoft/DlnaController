/*   
Copyright 2006 - 2010 Intel Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

using OpenSource.UPnP;

namespace OpenSource.UPnP.AV
{
    /// <summary>
    /// Transparent DeviceSide UPnP Service
    /// </summary>
    public class DvContentDirectory : IUPnPService
    {

        // Place your declarations above this line

        #region AutoGenerated Code Section [Do NOT Modify, unless you know what you're doing]
        //{{{{{ Begin Code Block

        private _DvContentDirectory _S;
        public static string URN = "urn:schemas-upnp-org:service:ContentDirectory:1";
        public double VERSION
        {
           get
           {
               return(double.Parse(_S.GetUPnPService().Version));
           }
        }

        public enum Enum_A_ARG_TYPE_TransferStatus
        {
            COMPLETED,
            ERROR,
            IN_PROGRESS,
            STOPPED,
        }
        public Enum_A_ARG_TYPE_TransferStatus A_ARG_TYPE_TransferStatus
        {
            set
            {
               string v = "";
               switch(value)
               {
                  case Enum_A_ARG_TYPE_TransferStatus.COMPLETED:
                     v = "COMPLETED";
                     break;
                  case Enum_A_ARG_TYPE_TransferStatus.ERROR:
                     v = "ERROR";
                     break;
                  case Enum_A_ARG_TYPE_TransferStatus.IN_PROGRESS:
                     v = "IN_PROGRESS";
                     break;
                  case Enum_A_ARG_TYPE_TransferStatus.STOPPED:
                     v = "STOPPED";
                     break;
               }
               _S.SetStateVariable("A_ARG_TYPE_TransferStatus",v);
            }
            get
            {
               Enum_A_ARG_TYPE_TransferStatus RetVal = 0;
               string v = (string)_S.GetStateVariable("A_ARG_TYPE_TransferStatus");
               switch(v)
               {
                  case "COMPLETED":
                     RetVal = Enum_A_ARG_TYPE_TransferStatus.COMPLETED;
                     break;
                  case "ERROR":
                     RetVal = Enum_A_ARG_TYPE_TransferStatus.ERROR;
                     break;
                  case "IN_PROGRESS":
                     RetVal = Enum_A_ARG_TYPE_TransferStatus.IN_PROGRESS;
                     break;
                  case "STOPPED":
                     RetVal = Enum_A_ARG_TYPE_TransferStatus.STOPPED;
                     break;
               }
               return(RetVal);
           }
        }
        public enum Enum_A_ARG_TYPE_BrowseFlag
        {
            BROWSEMETADATA,
            BROWSEDIRECTCHILDREN,
        }
        public Enum_A_ARG_TYPE_BrowseFlag A_ARG_TYPE_BrowseFlag
        {
            set
            {
               string v = "";
               switch(value)
               {
                  case Enum_A_ARG_TYPE_BrowseFlag.BROWSEMETADATA:
                     v = "BrowseMetadata";
                     break;
                  case Enum_A_ARG_TYPE_BrowseFlag.BROWSEDIRECTCHILDREN:
                     v = "BrowseDirectChildren";
                     break;
               }
               _S.SetStateVariable("A_ARG_TYPE_BrowseFlag",v);
            }
            get
            {
               Enum_A_ARG_TYPE_BrowseFlag RetVal = 0;
               string v = (string)_S.GetStateVariable("A_ARG_TYPE_BrowseFlag");
               switch(v)
               {
                  case "BrowseMetadata":
                     RetVal = Enum_A_ARG_TYPE_BrowseFlag.BROWSEMETADATA;
                     break;
                  case "BrowseDirectChildren":
                     RetVal = Enum_A_ARG_TYPE_BrowseFlag.BROWSEDIRECTCHILDREN;
                     break;
               }
               return(RetVal);
           }
        }
        static public string Enum_A_ARG_TYPE_TransferStatus_ToString(Enum_A_ARG_TYPE_TransferStatus en)
        {
            string RetVal = "";
            switch(en)
            {
                case Enum_A_ARG_TYPE_TransferStatus.COMPLETED:
                    RetVal = "COMPLETED";
                    break;
                case Enum_A_ARG_TYPE_TransferStatus.ERROR:
                    RetVal = "ERROR";
                    break;
                case Enum_A_ARG_TYPE_TransferStatus.IN_PROGRESS:
                    RetVal = "IN_PROGRESS";
                    break;
                case Enum_A_ARG_TYPE_TransferStatus.STOPPED:
                    RetVal = "STOPPED";
                    break;
            }
            return(RetVal);
        }
        static public string[] Values_A_ARG_TYPE_TransferStatus
        {
            get
            {
                string[] RetVal = new string[4]{"STOPPED","IN_PROGRESS","ERROR","COMPLETED"};
                return(RetVal);
            }
        }
        static public string Enum_A_ARG_TYPE_BrowseFlag_ToString(Enum_A_ARG_TYPE_BrowseFlag en)
        {
            string RetVal = "";
            switch(en)
            {
                case Enum_A_ARG_TYPE_BrowseFlag.BROWSEMETADATA:
                    RetVal = "BrowseMetadata";
                    break;
                case Enum_A_ARG_TYPE_BrowseFlag.BROWSEDIRECTCHILDREN:
                    RetVal = "BrowseDirectChildren";
                    break;
            }
            return(RetVal);
        }
        static public string[] Values_A_ARG_TYPE_BrowseFlag
        {
            get
            {
                string[] RetVal = new string[2]{"BrowseDirectChildren","BrowseMetadata"};
                return(RetVal);
            }
        }
        public delegate void OnStateVariableModifiedHandler(DvContentDirectory sender);
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_SortCriteria;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_TransferLength;
        public event OnStateVariableModifiedHandler OnStateVariableModified_TransferIDs;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_UpdateID;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_SearchCriteria;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_Filter;
        public event OnStateVariableModifiedHandler OnStateVariableModified_ContainerUpdateIDs;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_Result;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_Index;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_TransferID;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_TagValueList;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_URI;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_BrowseFlag;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_ObjectID;
        public event OnStateVariableModifiedHandler OnStateVariableModified_SortCapabilities;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_Count;
        public event OnStateVariableModifiedHandler OnStateVariableModified_SearchCapabilities;
        public event OnStateVariableModifiedHandler OnStateVariableModified_SystemUpdateID;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_TransferStatus;
        public event OnStateVariableModifiedHandler OnStateVariableModified_A_ARG_TYPE_TransferTotal;
        public System.String A_ARG_TYPE_SortCriteria
        {
            get
            {
               return((System.String)_S.GetStateVariable("A_ARG_TYPE_SortCriteria"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_SortCriteria", value);
            }
        }
        public System.String A_ARG_TYPE_TransferLength
        {
            get
            {
               return((System.String)_S.GetStateVariable("A_ARG_TYPE_TransferLength"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_TransferLength", value);
            }
        }
        public System.String Evented_TransferIDs
        {
            get
            {
               return((System.String)_S.GetStateVariable("TransferIDs"));
            }
            set
            {
               _S.SetStateVariable("TransferIDs", value);
            }
        }
        public System.UInt32 A_ARG_TYPE_UpdateID
        {
            get
            {
               return((System.UInt32)_S.GetStateVariable("A_ARG_TYPE_UpdateID"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_UpdateID", value);
            }
        }
        public System.String A_ARG_TYPE_SearchCriteria
        {
            get
            {
               return((System.String)_S.GetStateVariable("A_ARG_TYPE_SearchCriteria"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_SearchCriteria", value);
            }
        }
        public System.String A_ARG_TYPE_Filter
        {
            get
            {
               return((System.String)_S.GetStateVariable("A_ARG_TYPE_Filter"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_Filter", value);
            }
        }
        public System.String Evented_ContainerUpdateIDs
        {
            get
            {
               return((System.String)_S.GetStateVariable("ContainerUpdateIDs"));
            }
            set
            {
               _S.SetStateVariable("ContainerUpdateIDs", value);
            }
        }
        public System.String A_ARG_TYPE_Result
        {
            get
            {
               return((System.String)_S.GetStateVariable("A_ARG_TYPE_Result"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_Result", value);
            }
        }
        public System.UInt32 A_ARG_TYPE_Index
        {
            get
            {
               return((System.UInt32)_S.GetStateVariable("A_ARG_TYPE_Index"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_Index", value);
            }
        }
        public System.UInt32 A_ARG_TYPE_TransferID
        {
            get
            {
               return((System.UInt32)_S.GetStateVariable("A_ARG_TYPE_TransferID"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_TransferID", value);
            }
        }
        public System.String A_ARG_TYPE_TagValueList
        {
            get
            {
               return((System.String)_S.GetStateVariable("A_ARG_TYPE_TagValueList"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_TagValueList", value);
            }
        }
        public System.Uri A_ARG_TYPE_URI
        {
            get
            {
               return((System.Uri)_S.GetStateVariable("A_ARG_TYPE_URI"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_URI", value);
            }
        }
        public System.String A_ARG_TYPE_ObjectID
        {
            get
            {
               return((System.String)_S.GetStateVariable("A_ARG_TYPE_ObjectID"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_ObjectID", value);
            }
        }
        public System.String SortCapabilities
        {
            get
            {
               return((System.String)_S.GetStateVariable("SortCapabilities"));
            }
            set
            {
               _S.SetStateVariable("SortCapabilities", value);
            }
        }
        public System.UInt32 A_ARG_TYPE_Count
        {
            get
            {
               return((System.UInt32)_S.GetStateVariable("A_ARG_TYPE_Count"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_Count", value);
            }
        }
        public System.String SearchCapabilities
        {
            get
            {
               return((System.String)_S.GetStateVariable("SearchCapabilities"));
            }
            set
            {
               _S.SetStateVariable("SearchCapabilities", value);
            }
        }
        public System.UInt32 Evented_SystemUpdateID
        {
            get
            {
               return((System.UInt32)_S.GetStateVariable("SystemUpdateID"));
            }
            set
            {
               _S.SetStateVariable("SystemUpdateID", value);
            }
        }
        public System.String A_ARG_TYPE_TransferTotal
        {
            get
            {
               return((System.String)_S.GetStateVariable("A_ARG_TYPE_TransferTotal"));
            }
            set
            {
               _S.SetStateVariable("A_ARG_TYPE_TransferTotal", value);
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_SortCriteria
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SortCriteria")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SortCriteria")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_SortCriteria
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SortCriteria")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SortCriteria")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_TransferLength
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferLength")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferLength")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_TransferLength
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferLength")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferLength")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_TransferIDs
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("TransferIDs")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("TransferIDs")).Accumulator = value;
            }
        }
        public double ModerationDuration_TransferIDs
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("TransferIDs")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("TransferIDs")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_UpdateID
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_UpdateID")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_UpdateID")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_UpdateID
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_UpdateID")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_UpdateID")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_SearchCriteria
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SearchCriteria")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SearchCriteria")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_SearchCriteria
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SearchCriteria")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SearchCriteria")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_Filter
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Filter")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Filter")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_Filter
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Filter")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Filter")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_ContainerUpdateIDs
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("ContainerUpdateIDs")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("ContainerUpdateIDs")).Accumulator = value;
            }
        }
        public double ModerationDuration_ContainerUpdateIDs
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("ContainerUpdateIDs")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("ContainerUpdateIDs")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_Result
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Result")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Result")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_Result
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Result")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Result")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_Index
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Index")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Index")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_Index
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Index")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Index")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_TransferID
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferID")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferID")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_TransferID
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferID")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferID")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_TagValueList
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TagValueList")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TagValueList")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_TagValueList
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TagValueList")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TagValueList")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_URI
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_URI")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_URI")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_URI
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_URI")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_URI")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_BrowseFlag
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_BrowseFlag")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_BrowseFlag")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_BrowseFlag
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_BrowseFlag")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_BrowseFlag")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_ObjectID
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_ObjectID")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_ObjectID")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_ObjectID
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_ObjectID")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_ObjectID")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_SortCapabilities
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SortCapabilities")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SortCapabilities")).Accumulator = value;
            }
        }
        public double ModerationDuration_SortCapabilities
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SortCapabilities")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SortCapabilities")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_Count
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Count")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Count")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_Count
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Count")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Count")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_SearchCapabilities
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SearchCapabilities")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SearchCapabilities")).Accumulator = value;
            }
        }
        public double ModerationDuration_SearchCapabilities
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SearchCapabilities")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SearchCapabilities")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_SystemUpdateID
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SystemUpdateID")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SystemUpdateID")).Accumulator = value;
            }
        }
        public double ModerationDuration_SystemUpdateID
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SystemUpdateID")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("SystemUpdateID")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_TransferStatus
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferStatus")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferStatus")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_TransferStatus
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferStatus")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferStatus")).ModerationPeriod = value;
            }
        }
        public UPnPModeratedStateVariable.IAccumulator Accumulator_A_ARG_TYPE_TransferTotal
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferTotal")).Accumulator);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferTotal")).Accumulator = value;
            }
        }
        public double ModerationDuration_A_ARG_TYPE_TransferTotal
        {
            get
            {
                 return(((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferTotal")).ModerationPeriod);
            }
            set
            {
                 ((UPnPModeratedStateVariable)_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferTotal")).ModerationPeriod = value;
            }
        }
        public delegate void Delegate_ExportResource(System.Uri SourceURI, System.Uri DestinationURI, out System.UInt32 TransferID);
        public delegate void Delegate_StopTransferResource(System.UInt32 TransferID);
        public delegate void Delegate_DestroyObject(System.String ObjectID);
        public delegate void Delegate_UpdateObject(System.String ObjectID, System.String CurrentTagValue, System.String NewTagValue);
        public delegate void Delegate_GetSystemUpdateID(out System.UInt32 Id);
        public delegate void Delegate_GetTransferProgress(System.UInt32 TransferID, out DvContentDirectory.Enum_A_ARG_TYPE_TransferStatus TransferStatus, out System.String TransferLength, out System.String TransferTotal);
        public delegate void Delegate_GetSearchCapabilities(out System.String SearchCaps);
        public delegate void Delegate_CreateObject(System.String ContainerID, System.String Elements, out System.String ObjectID, out System.String Result);
        public delegate void Delegate_ImportResource(System.Uri SourceURI, System.Uri DestinationURI, out System.UInt32 TransferID);
        public delegate void Delegate_Search(System.String ContainerID, System.String SearchCriteria, System.String Filter, System.UInt32 StartingIndex, System.UInt32 RequestedCount, System.String SortCriteria, out System.String Result, out System.UInt32 NumberReturned, out System.UInt32 TotalMatches, out System.UInt32 UpdateID);
        public delegate void Delegate_GetSortCapabilities(out System.String SortCaps);
        public delegate void Delegate_Browse(System.String ObjectID, DvContentDirectory.Enum_A_ARG_TYPE_BrowseFlag BrowseFlag, System.String Filter, System.UInt32 StartingIndex, System.UInt32 RequestedCount, System.String SortCriteria, out System.String Result, out System.UInt32 NumberReturned, out System.UInt32 TotalMatches, out System.UInt32 UpdateID);
        public delegate void Delegate_CreateReference(System.String ContainerID, System.String ObjectID, out System.String NewID);
        public delegate void Delegate_DeleteResource(System.Uri ResourceURI);

        public Delegate_ExportResource External_ExportResource = null;
        public Delegate_StopTransferResource External_StopTransferResource = null;
        public Delegate_DestroyObject External_DestroyObject = null;
        public Delegate_UpdateObject External_UpdateObject = null;
        public Delegate_GetSystemUpdateID External_GetSystemUpdateID = null;
        public Delegate_GetTransferProgress External_GetTransferProgress = null;
        public Delegate_GetSearchCapabilities External_GetSearchCapabilities = null;
        public Delegate_CreateObject External_CreateObject = null;
        public Delegate_ImportResource External_ImportResource = null;
        public Delegate_Search External_Search = null;
        public Delegate_GetSortCapabilities External_GetSortCapabilities = null;
        public Delegate_Browse External_Browse = null;
        public Delegate_CreateReference External_CreateReference = null;
        public Delegate_DeleteResource External_DeleteResource = null;

        public void RemoveStateVariable_A_ARG_TYPE_SortCriteria()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SortCriteria"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_TransferLength()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferLength"));
        }
        public void RemoveStateVariable_TransferIDs()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("TransferIDs"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_UpdateID()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_UpdateID"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_SearchCriteria()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SearchCriteria"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_Filter()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Filter"));
        }
        public void RemoveStateVariable_ContainerUpdateIDs()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("ContainerUpdateIDs"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_Result()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Result"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_Index()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Index"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_TransferID()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferID"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_TagValueList()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TagValueList"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_URI()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_URI"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_BrowseFlag()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_BrowseFlag"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_ObjectID()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_ObjectID"));
        }
        public void RemoveStateVariable_SortCapabilities()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("SortCapabilities"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_Count()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Count"));
        }
        public void RemoveStateVariable_SearchCapabilities()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("SearchCapabilities"));
        }
        public void RemoveStateVariable_SystemUpdateID()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("SystemUpdateID"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_TransferStatus()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferStatus"));
        }
        public void RemoveStateVariable_A_ARG_TYPE_TransferTotal()
        {
            _S.GetUPnPService().RemoveStateVariable(_S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferTotal"));
        }
        public void RemoveAction_ExportResource()
        {
             _S.GetUPnPService().RemoveMethod("ExportResource");
        }
        public void RemoveAction_StopTransferResource()
        {
             _S.GetUPnPService().RemoveMethod("StopTransferResource");
        }
        public void RemoveAction_DestroyObject()
        {
             _S.GetUPnPService().RemoveMethod("DestroyObject");
        }
        public void RemoveAction_UpdateObject()
        {
             _S.GetUPnPService().RemoveMethod("UpdateObject");
        }
        public void RemoveAction_GetSystemUpdateID()
        {
             _S.GetUPnPService().RemoveMethod("GetSystemUpdateID");
        }
        public void RemoveAction_GetTransferProgress()
        {
             _S.GetUPnPService().RemoveMethod("GetTransferProgress");
        }
        public void RemoveAction_GetSearchCapabilities()
        {
             _S.GetUPnPService().RemoveMethod("GetSearchCapabilities");
        }
        public void RemoveAction_CreateObject()
        {
             _S.GetUPnPService().RemoveMethod("CreateObject");
        }
        public void RemoveAction_ImportResource()
        {
             _S.GetUPnPService().RemoveMethod("ImportResource");
        }
        public void RemoveAction_Search()
        {
             _S.GetUPnPService().RemoveMethod("Search");
        }
        public void RemoveAction_GetSortCapabilities()
        {
             _S.GetUPnPService().RemoveMethod("GetSortCapabilities");
        }
        public void RemoveAction_Browse()
        {
             _S.GetUPnPService().RemoveMethod("Browse");
        }
        public void RemoveAction_CreateReference()
        {
             _S.GetUPnPService().RemoveMethod("CreateReference");
        }
        public void RemoveAction_DeleteResource()
        {
             _S.GetUPnPService().RemoveMethod("DeleteResource");
        }
        public System.Net.IPEndPoint GetCaller()
        {
             return(_S.GetUPnPService().GetCaller());
        }
        public System.Net.IPEndPoint GetReceiver()
        {
             return(_S.GetUPnPService().GetReceiver());
        }

        private class _DvContentDirectory
        {
            private DvContentDirectory Outer = null;
            private UPnPService S;
            internal _DvContentDirectory(DvContentDirectory n)
            {
                Outer = n;
                S = BuildUPnPService();
            }
            public UPnPService GetUPnPService()
            {
                return(S);
            }
            public void SetStateVariable(string VarName, object VarValue)
            {
               S.SetStateVariable(VarName,VarValue);
            }
            public object GetStateVariable(string VarName)
            {
               return(S.GetStateVariable(VarName));
            }
            protected UPnPService BuildUPnPService()
            {
                UPnPStateVariable[] RetVal = new UPnPStateVariable[20];
                RetVal[0] = new UPnPModeratedStateVariable("A_ARG_TYPE_SortCriteria", typeof(System.String), false);
                RetVal[0].AddAssociation("Search", "SortCriteria");
                RetVal[0].AddAssociation("Browse", "SortCriteria");
                RetVal[1] = new UPnPModeratedStateVariable("A_ARG_TYPE_TransferLength", typeof(System.String), false);
                RetVal[1].AddAssociation("GetTransferProgress", "TransferLength");
                RetVal[2] = new UPnPModeratedStateVariable("TransferIDs", typeof(System.String), true);
                RetVal[3] = new UPnPModeratedStateVariable("A_ARG_TYPE_UpdateID", typeof(System.UInt32), false);
                RetVal[3].AddAssociation("Search", "UpdateID");
                RetVal[3].AddAssociation("Browse", "UpdateID");
                RetVal[4] = new UPnPModeratedStateVariable("A_ARG_TYPE_SearchCriteria", typeof(System.String), false);
                RetVal[4].AddAssociation("Search", "SearchCriteria");
                RetVal[5] = new UPnPModeratedStateVariable("A_ARG_TYPE_Filter", typeof(System.String), false);
                RetVal[5].AddAssociation("Search", "Filter");
                RetVal[5].AddAssociation("Browse", "Filter");
                RetVal[6] = new UPnPModeratedStateVariable("ContainerUpdateIDs", typeof(System.String), true);
                RetVal[7] = new UPnPModeratedStateVariable("A_ARG_TYPE_Result", typeof(System.String), false);
                RetVal[7].AddAssociation("CreateObject", "Elements");
                RetVal[7].AddAssociation("CreateObject", "Result");
                RetVal[7].AddAssociation("Search", "Result");
                RetVal[7].AddAssociation("Browse", "Result");
                RetVal[8] = new UPnPModeratedStateVariable("A_ARG_TYPE_Index", typeof(System.UInt32), false);
                RetVal[8].AddAssociation("Search", "StartingIndex");
                RetVal[8].AddAssociation("Browse", "StartingIndex");
                RetVal[9] = new UPnPModeratedStateVariable("A_ARG_TYPE_TransferID", typeof(System.UInt32), false);
                RetVal[9].AddAssociation("ExportResource", "TransferID");
                RetVal[9].AddAssociation("StopTransferResource", "TransferID");
                RetVal[9].AddAssociation("GetTransferProgress", "TransferID");
                RetVal[9].AddAssociation("ImportResource", "TransferID");
                RetVal[10] = new UPnPModeratedStateVariable("A_ARG_TYPE_TagValueList", typeof(System.String), false);
                RetVal[10].AddAssociation("UpdateObject", "CurrentTagValue");
                RetVal[10].AddAssociation("UpdateObject", "NewTagValue");
                RetVal[11] = new UPnPModeratedStateVariable("A_ARG_TYPE_URI", typeof(System.Uri), false);
                RetVal[11].AddAssociation("ExportResource", "SourceURI");
                RetVal[11].AddAssociation("ExportResource", "DestinationURI");
                RetVal[11].AddAssociation("ImportResource", "SourceURI");
                RetVal[11].AddAssociation("ImportResource", "DestinationURI");
                RetVal[11].AddAssociation("DeleteResource", "ResourceURI");
                RetVal[12] = new UPnPModeratedStateVariable("A_ARG_TYPE_BrowseFlag", typeof(System.String), false);
                RetVal[12].AllowedStringValues = new string[2]{"BrowseMetadata", "BrowseDirectChildren"};
                RetVal[12].AddAssociation("Browse", "BrowseFlag");
                RetVal[13] = new UPnPModeratedStateVariable("A_ARG_TYPE_ObjectID", typeof(System.String), false);
                RetVal[13].AddAssociation("DestroyObject", "ObjectID");
                RetVal[13].AddAssociation("UpdateObject", "ObjectID");
                RetVal[13].AddAssociation("CreateObject", "ContainerID");
                RetVal[13].AddAssociation("CreateObject", "ObjectID");
                RetVal[13].AddAssociation("Search", "ContainerID");
                RetVal[13].AddAssociation("Browse", "ObjectID");
                RetVal[13].AddAssociation("CreateReference", "ContainerID");
                RetVal[13].AddAssociation("CreateReference", "ObjectID");
                RetVal[13].AddAssociation("CreateReference", "NewID");
                RetVal[14] = new UPnPModeratedStateVariable("SortCapabilities", typeof(System.String), false);
                RetVal[14].AddAssociation("GetSortCapabilities", "SortCaps");
                RetVal[15] = new UPnPModeratedStateVariable("A_ARG_TYPE_Count", typeof(System.UInt32), false);
                RetVal[15].AddAssociation("Search", "RequestedCount");
                RetVal[15].AddAssociation("Search", "NumberReturned");
                RetVal[15].AddAssociation("Search", "TotalMatches");
                RetVal[15].AddAssociation("Browse", "RequestedCount");
                RetVal[15].AddAssociation("Browse", "NumberReturned");
                RetVal[15].AddAssociation("Browse", "TotalMatches");
                RetVal[16] = new UPnPModeratedStateVariable("SearchCapabilities", typeof(System.String), false);
                RetVal[16].AddAssociation("GetSearchCapabilities", "SearchCaps");
                RetVal[17] = new UPnPModeratedStateVariable("SystemUpdateID", typeof(System.UInt32), true);
                RetVal[17].AddAssociation("GetSystemUpdateID", "Id");
                RetVal[18] = new UPnPModeratedStateVariable("A_ARG_TYPE_TransferStatus", typeof(System.String), false);
                RetVal[18].AllowedStringValues = new string[4]{"COMPLETED", "ERROR", "IN_PROGRESS", "STOPPED"};
                RetVal[18].AddAssociation("GetTransferProgress", "TransferStatus");
                RetVal[19] = new UPnPModeratedStateVariable("A_ARG_TYPE_TransferTotal", typeof(System.String), false);
                RetVal[19].AddAssociation("GetTransferProgress", "TransferTotal");

                UPnPService S = new UPnPService(1, "urn:schemas-upnp-org:service:ContentDirectory", "urn:schemas-upnp-org:service:ContentDirectory:1", true, this);
                for(int i=0;i<RetVal.Length;++i)
                {
                   S.AddStateVariable(RetVal[i]);
                }
                S.AddMethod("ExportResource");
                S.AddMethod("StopTransferResource");
                S.AddMethod("DestroyObject");
                S.AddMethod("UpdateObject");
                S.AddMethod("GetSystemUpdateID");
                S.AddMethod("GetTransferProgress");
                S.AddMethod("GetSearchCapabilities");
                S.AddMethod("CreateObject");
                S.AddMethod("ImportResource");
                S.AddMethod("Search");
                S.AddMethod("GetSortCapabilities");
                S.AddMethod("Browse");
                S.AddMethod("CreateReference");
                S.AddMethod("DeleteResource");
                return(S);
            }

            public void ExportResource(System.Uri SourceURI, System.Uri DestinationURI, out System.UInt32 TransferID)
            {
                if(Outer.External_ExportResource != null)
                {
                    Outer.External_ExportResource(SourceURI, DestinationURI, out TransferID);
                }
                else
                {
                    Sink_ExportResource(SourceURI, DestinationURI, out TransferID);
                }
            }
            public void StopTransferResource(System.UInt32 TransferID)
            {
                if(Outer.External_StopTransferResource != null)
                {
                    Outer.External_StopTransferResource(TransferID);
                }
                else
                {
                    Sink_StopTransferResource(TransferID);
                }
            }
            public void DestroyObject(System.String ObjectID)
            {
                if(Outer.External_DestroyObject != null)
                {
                    Outer.External_DestroyObject(ObjectID);
                }
                else
                {
                    Sink_DestroyObject(ObjectID);
                }
            }
            public void UpdateObject(System.String ObjectID, System.String CurrentTagValue, System.String NewTagValue)
            {
                if(Outer.External_UpdateObject != null)
                {
                    Outer.External_UpdateObject(ObjectID, CurrentTagValue, NewTagValue);
                }
                else
                {
                    Sink_UpdateObject(ObjectID, CurrentTagValue, NewTagValue);
                }
            }
            public void GetSystemUpdateID(out System.UInt32 Id)
            {
                if(Outer.External_GetSystemUpdateID != null)
                {
                    Outer.External_GetSystemUpdateID(out Id);
                }
                else
                {
                    Sink_GetSystemUpdateID(out Id);
                }
            }
            public void GetTransferProgress(System.UInt32 TransferID, out System.String TransferStatus, out System.String TransferLength, out System.String TransferTotal)
            {
                Enum_A_ARG_TYPE_TransferStatus e_TransferStatus;
                if(Outer.External_GetTransferProgress != null)
                {
                    Outer.External_GetTransferProgress(TransferID, out e_TransferStatus, out TransferLength, out TransferTotal);
                }
                else
                {
                    Sink_GetTransferProgress(TransferID, out e_TransferStatus, out TransferLength, out TransferTotal);
                }
                switch(e_TransferStatus)
                {
                    case Enum_A_ARG_TYPE_TransferStatus.COMPLETED:
                        TransferStatus = "COMPLETED";
                        break;
                    case Enum_A_ARG_TYPE_TransferStatus.ERROR:
                        TransferStatus = "ERROR";
                        break;
                    case Enum_A_ARG_TYPE_TransferStatus.IN_PROGRESS:
                        TransferStatus = "IN_PROGRESS";
                        break;
                    case Enum_A_ARG_TYPE_TransferStatus.STOPPED:
                        TransferStatus = "STOPPED";
                        break;
                    default:
                        TransferStatus = "";
                        break;
                }
            }
            public void GetSearchCapabilities(out System.String SearchCaps)
            {
                if(Outer.External_GetSearchCapabilities != null)
                {
                    Outer.External_GetSearchCapabilities(out SearchCaps);
                }
                else
                {
                    Sink_GetSearchCapabilities(out SearchCaps);
                }
            }
            public void CreateObject(System.String ContainerID, System.String Elements, out System.String ObjectID, out System.String Result)
            {
                if(Outer.External_CreateObject != null)
                {
                    Outer.External_CreateObject(ContainerID, Elements, out ObjectID, out Result);
                }
                else
                {
                    Sink_CreateObject(ContainerID, Elements, out ObjectID, out Result);
                }
            }
            public void ImportResource(System.Uri SourceURI, System.Uri DestinationURI, out System.UInt32 TransferID)
            {
                if(Outer.External_ImportResource != null)
                {
                    Outer.External_ImportResource(SourceURI, DestinationURI, out TransferID);
                }
                else
                {
                    Sink_ImportResource(SourceURI, DestinationURI, out TransferID);
                }
            }
            public void Search(System.String ContainerID, System.String SearchCriteria, System.String Filter, System.UInt32 StartingIndex, System.UInt32 RequestedCount, System.String SortCriteria, out System.String Result, out System.UInt32 NumberReturned, out System.UInt32 TotalMatches, out System.UInt32 UpdateID)
            {
                if(Outer.External_Search != null)
                {
                    Outer.External_Search(ContainerID, SearchCriteria, Filter, StartingIndex, RequestedCount, SortCriteria, out Result, out NumberReturned, out TotalMatches, out UpdateID);
                }
                else
                {
                    Sink_Search(ContainerID, SearchCriteria, Filter, StartingIndex, RequestedCount, SortCriteria, out Result, out NumberReturned, out TotalMatches, out UpdateID);
                }
            }
            public void GetSortCapabilities(out System.String SortCaps)
            {
                if(Outer.External_GetSortCapabilities != null)
                {
                    Outer.External_GetSortCapabilities(out SortCaps);
                }
                else
                {
                    Sink_GetSortCapabilities(out SortCaps);
                }
            }
            public void Browse(System.String ObjectID, System.String BrowseFlag, System.String Filter, System.UInt32 StartingIndex, System.UInt32 RequestedCount, System.String SortCriteria, out System.String Result, out System.UInt32 NumberReturned, out System.UInt32 TotalMatches, out System.UInt32 UpdateID)
            {
                Enum_A_ARG_TYPE_BrowseFlag e_BrowseFlag;
                switch(BrowseFlag)
                {
                    case "BrowseMetadata":
                        e_BrowseFlag = Enum_A_ARG_TYPE_BrowseFlag.BROWSEMETADATA;
                        break;
                    case "BrowseDirectChildren":
                        e_BrowseFlag = Enum_A_ARG_TYPE_BrowseFlag.BROWSEDIRECTCHILDREN;
                        break;
                    default:
                        e_BrowseFlag = 0;
                        break;
                }
                if(Outer.External_Browse != null)
                {
                    Outer.External_Browse(ObjectID, e_BrowseFlag, Filter, StartingIndex, RequestedCount, SortCriteria, out Result, out NumberReturned, out TotalMatches, out UpdateID);
                }
                else
                {
                    Sink_Browse(ObjectID, e_BrowseFlag, Filter, StartingIndex, RequestedCount, SortCriteria, out Result, out NumberReturned, out TotalMatches, out UpdateID);
                }
            }
            public void CreateReference(System.String ContainerID, System.String ObjectID, out System.String NewID)
            {
                if(Outer.External_CreateReference != null)
                {
                    Outer.External_CreateReference(ContainerID, ObjectID, out NewID);
                }
                else
                {
                    Sink_CreateReference(ContainerID, ObjectID, out NewID);
                }
            }
            public void DeleteResource(System.Uri ResourceURI)
            {
                if(Outer.External_DeleteResource != null)
                {
                    Outer.External_DeleteResource(ResourceURI);
                }
                else
                {
                    Sink_DeleteResource(ResourceURI);
                }
            }

            public Delegate_ExportResource Sink_ExportResource;
            public Delegate_StopTransferResource Sink_StopTransferResource;
            public Delegate_DestroyObject Sink_DestroyObject;
            public Delegate_UpdateObject Sink_UpdateObject;
            public Delegate_GetSystemUpdateID Sink_GetSystemUpdateID;
            public Delegate_GetTransferProgress Sink_GetTransferProgress;
            public Delegate_GetSearchCapabilities Sink_GetSearchCapabilities;
            public Delegate_CreateObject Sink_CreateObject;
            public Delegate_ImportResource Sink_ImportResource;
            public Delegate_Search Sink_Search;
            public Delegate_GetSortCapabilities Sink_GetSortCapabilities;
            public Delegate_Browse Sink_Browse;
            public Delegate_CreateReference Sink_CreateReference;
            public Delegate_DeleteResource Sink_DeleteResource;
        }
        public DvContentDirectory()
        {
            _S = new _DvContentDirectory(this);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SortCriteria").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_SortCriteria);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferLength").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_TransferLength);
            _S.GetUPnPService().GetStateVariableObject("TransferIDs").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_TransferIDs);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_UpdateID").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_UpdateID);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_SearchCriteria").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_SearchCriteria);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Filter").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_Filter);
            _S.GetUPnPService().GetStateVariableObject("ContainerUpdateIDs").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_ContainerUpdateIDs);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Result").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_Result);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Index").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_Index);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferID").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_TransferID);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TagValueList").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_TagValueList);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_URI").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_URI);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_BrowseFlag").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_BrowseFlag);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_ObjectID").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_ObjectID);
            _S.GetUPnPService().GetStateVariableObject("SortCapabilities").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_SortCapabilities);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_Count").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_Count);
            _S.GetUPnPService().GetStateVariableObject("SearchCapabilities").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_SearchCapabilities);
            _S.GetUPnPService().GetStateVariableObject("SystemUpdateID").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_SystemUpdateID);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferStatus").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_TransferStatus);
            _S.GetUPnPService().GetStateVariableObject("A_ARG_TYPE_TransferTotal").OnModified += new UPnPStateVariable.ModifiedHandler(OnModifiedSink_A_ARG_TYPE_TransferTotal);
            _S.Sink_ExportResource = new Delegate_ExportResource(ExportResource);
            _S.Sink_StopTransferResource = new Delegate_StopTransferResource(StopTransferResource);
            _S.Sink_DestroyObject = new Delegate_DestroyObject(DestroyObject);
            _S.Sink_UpdateObject = new Delegate_UpdateObject(UpdateObject);
            _S.Sink_GetSystemUpdateID = new Delegate_GetSystemUpdateID(GetSystemUpdateID);
            _S.Sink_GetTransferProgress = new Delegate_GetTransferProgress(GetTransferProgress);
            _S.Sink_GetSearchCapabilities = new Delegate_GetSearchCapabilities(GetSearchCapabilities);
            _S.Sink_CreateObject = new Delegate_CreateObject(CreateObject);
            _S.Sink_ImportResource = new Delegate_ImportResource(ImportResource);
            _S.Sink_Search = new Delegate_Search(Search);
            _S.Sink_GetSortCapabilities = new Delegate_GetSortCapabilities(GetSortCapabilities);
            _S.Sink_Browse = new Delegate_Browse(Browse);
            _S.Sink_CreateReference = new Delegate_CreateReference(CreateReference);
            _S.Sink_DeleteResource = new Delegate_DeleteResource(DeleteResource);
        }
        public DvContentDirectory(string ID):this()
        {
            _S.GetUPnPService().ServiceID = ID;
        }
        public UPnPService GetUPnPService()
        {
            return(_S.GetUPnPService());
        }
        private void OnModifiedSink_A_ARG_TYPE_SortCriteria(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_SortCriteria != null) OnStateVariableModified_A_ARG_TYPE_SortCriteria(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_TransferLength(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_TransferLength != null) OnStateVariableModified_A_ARG_TYPE_TransferLength(this);
        }
        private void OnModifiedSink_TransferIDs(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_TransferIDs != null) OnStateVariableModified_TransferIDs(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_UpdateID(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_UpdateID != null) OnStateVariableModified_A_ARG_TYPE_UpdateID(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_SearchCriteria(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_SearchCriteria != null) OnStateVariableModified_A_ARG_TYPE_SearchCriteria(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_Filter(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_Filter != null) OnStateVariableModified_A_ARG_TYPE_Filter(this);
        }
        private void OnModifiedSink_ContainerUpdateIDs(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_ContainerUpdateIDs != null) OnStateVariableModified_ContainerUpdateIDs(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_Result(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_Result != null) OnStateVariableModified_A_ARG_TYPE_Result(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_Index(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_Index != null) OnStateVariableModified_A_ARG_TYPE_Index(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_TransferID(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_TransferID != null) OnStateVariableModified_A_ARG_TYPE_TransferID(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_TagValueList(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_TagValueList != null) OnStateVariableModified_A_ARG_TYPE_TagValueList(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_URI(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_URI != null) OnStateVariableModified_A_ARG_TYPE_URI(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_BrowseFlag(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_BrowseFlag != null) OnStateVariableModified_A_ARG_TYPE_BrowseFlag(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_ObjectID(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_ObjectID != null) OnStateVariableModified_A_ARG_TYPE_ObjectID(this);
        }
        private void OnModifiedSink_SortCapabilities(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_SortCapabilities != null) OnStateVariableModified_SortCapabilities(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_Count(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_Count != null) OnStateVariableModified_A_ARG_TYPE_Count(this);
        }
        private void OnModifiedSink_SearchCapabilities(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_SearchCapabilities != null) OnStateVariableModified_SearchCapabilities(this);
        }
        private void OnModifiedSink_SystemUpdateID(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_SystemUpdateID != null) OnStateVariableModified_SystemUpdateID(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_TransferStatus(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_TransferStatus != null) OnStateVariableModified_A_ARG_TYPE_TransferStatus(this);
        }
        private void OnModifiedSink_A_ARG_TYPE_TransferTotal(UPnPStateVariable sender, object NewValue)
        {
            if(OnStateVariableModified_A_ARG_TYPE_TransferTotal != null) OnStateVariableModified_A_ARG_TYPE_TransferTotal(this);
        }
        //}}}}} End of Code Block

        #endregion

        /// <summary>
        /// Action: ExportResource
        /// </summary>
        /// <param name="SourceURI">Associated State Variable: A_ARG_TYPE_URI</param>
        /// <param name="DestinationURI">Associated State Variable: A_ARG_TYPE_URI</param>
        /// <param name="TransferID">Associated State Variable: A_ARG_TYPE_TransferID</param>
        public void ExportResource(System.Uri SourceURI, System.Uri DestinationURI, out System.UInt32 TransferID)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: StopTransferResource
        /// </summary>
        /// <param name="TransferID">Associated State Variable: A_ARG_TYPE_TransferID</param>
        public void StopTransferResource(System.UInt32 TransferID)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: DestroyObject
        /// </summary>
        /// <param name="ObjectID">Associated State Variable: A_ARG_TYPE_ObjectID</param>
        public void DestroyObject(System.String ObjectID)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: UpdateObject
        /// </summary>
        /// <param name="ObjectID">Associated State Variable: A_ARG_TYPE_ObjectID</param>
        /// <param name="CurrentTagValue">Associated State Variable: A_ARG_TYPE_TagValueList</param>
        /// <param name="NewTagValue">Associated State Variable: A_ARG_TYPE_TagValueList</param>
        public void UpdateObject(System.String ObjectID, System.String CurrentTagValue, System.String NewTagValue)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: GetSystemUpdateID
        /// </summary>
        /// <param name="Id">Associated State Variable: SystemUpdateID</param>
        public void GetSystemUpdateID(out System.UInt32 Id)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: GetTransferProgress
        /// </summary>
        /// <param name="TransferID">Associated State Variable: A_ARG_TYPE_TransferID</param>
        /// <param name="TransferStatus">Associated State Variable: A_ARG_TYPE_TransferStatus</param>
        /// <param name="TransferLength">Associated State Variable: A_ARG_TYPE_TransferLength</param>
        /// <param name="TransferTotal">Associated State Variable: A_ARG_TYPE_TransferTotal</param>
        public void GetTransferProgress(System.UInt32 TransferID, out Enum_A_ARG_TYPE_TransferStatus TransferStatus, out System.String TransferLength, out System.String TransferTotal)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: GetSearchCapabilities
        /// </summary>
        /// <param name="SearchCaps">Associated State Variable: SearchCapabilities</param>
        public void GetSearchCapabilities(out System.String SearchCaps)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: CreateObject
        /// </summary>
        /// <param name="ContainerID">Associated State Variable: A_ARG_TYPE_ObjectID</param>
        /// <param name="Elements">Associated State Variable: A_ARG_TYPE_Result</param>
        /// <param name="ObjectID">Associated State Variable: A_ARG_TYPE_ObjectID</param>
        /// <param name="Result">Associated State Variable: A_ARG_TYPE_Result</param>
        public void CreateObject(System.String ContainerID, System.String Elements, out System.String ObjectID, out System.String Result)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: ImportResource
        /// </summary>
        /// <param name="SourceURI">Associated State Variable: A_ARG_TYPE_URI</param>
        /// <param name="DestinationURI">Associated State Variable: A_ARG_TYPE_URI</param>
        /// <param name="TransferID">Associated State Variable: A_ARG_TYPE_TransferID</param>
        public void ImportResource(System.Uri SourceURI, System.Uri DestinationURI, out System.UInt32 TransferID)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: Search
        /// </summary>
        /// <param name="ContainerID">Associated State Variable: A_ARG_TYPE_ObjectID</param>
        /// <param name="SearchCriteria">Associated State Variable: A_ARG_TYPE_SearchCriteria</param>
        /// <param name="Filter">Associated State Variable: A_ARG_TYPE_Filter</param>
        /// <param name="StartingIndex">Associated State Variable: A_ARG_TYPE_Index</param>
        /// <param name="RequestedCount">Associated State Variable: A_ARG_TYPE_Count</param>
        /// <param name="SortCriteria">Associated State Variable: A_ARG_TYPE_SortCriteria</param>
        /// <param name="Result">Associated State Variable: A_ARG_TYPE_Result</param>
        /// <param name="NumberReturned">Associated State Variable: A_ARG_TYPE_Count</param>
        /// <param name="TotalMatches">Associated State Variable: A_ARG_TYPE_Count</param>
        /// <param name="UpdateID">Associated State Variable: A_ARG_TYPE_UpdateID</param>
        public void Search(System.String ContainerID, System.String SearchCriteria, System.String Filter, System.UInt32 StartingIndex, System.UInt32 RequestedCount, System.String SortCriteria, out System.String Result, out System.UInt32 NumberReturned, out System.UInt32 TotalMatches, out System.UInt32 UpdateID)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: GetSortCapabilities
        /// </summary>
        /// <param name="SortCaps">Associated State Variable: SortCapabilities</param>
        public void GetSortCapabilities(out System.String SortCaps)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: Browse
        /// </summary>
        /// <param name="ObjectID">Associated State Variable: A_ARG_TYPE_ObjectID</param>
        /// <param name="BrowseFlag">Associated State Variable: A_ARG_TYPE_BrowseFlag</param>
        /// <param name="Filter">Associated State Variable: A_ARG_TYPE_Filter</param>
        /// <param name="StartingIndex">Associated State Variable: A_ARG_TYPE_Index</param>
        /// <param name="RequestedCount">Associated State Variable: A_ARG_TYPE_Count</param>
        /// <param name="SortCriteria">Associated State Variable: A_ARG_TYPE_SortCriteria</param>
        /// <param name="Result">Associated State Variable: A_ARG_TYPE_Result</param>
        /// <param name="NumberReturned">Associated State Variable: A_ARG_TYPE_Count</param>
        /// <param name="TotalMatches">Associated State Variable: A_ARG_TYPE_Count</param>
        /// <param name="UpdateID">Associated State Variable: A_ARG_TYPE_UpdateID</param>
        public void Browse(System.String ObjectID, Enum_A_ARG_TYPE_BrowseFlag BrowseFlag, System.String Filter, System.UInt32 StartingIndex, System.UInt32 RequestedCount, System.String SortCriteria, out System.String Result, out System.UInt32 NumberReturned, out System.UInt32 TotalMatches, out System.UInt32 UpdateID)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: CreateReference
        /// </summary>
        /// <param name="ContainerID">Associated State Variable: A_ARG_TYPE_ObjectID</param>
        /// <param name="ObjectID">Associated State Variable: A_ARG_TYPE_ObjectID</param>
        /// <param name="NewID">Associated State Variable: A_ARG_TYPE_ObjectID</param>
        public void CreateReference(System.String ContainerID, System.String ObjectID, out System.String NewID)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
        /// <summary>
        /// Action: DeleteResource
        /// </summary>
        /// <param name="ResourceURI">Associated State Variable: A_ARG_TYPE_URI</param>
        public void DeleteResource(System.Uri ResourceURI)
        {
            //ToDo: Add Your implementation here, and remove exception
            throw(new UPnPCustomException(800,"This method has not been completely implemented..."));
        }
    }
}